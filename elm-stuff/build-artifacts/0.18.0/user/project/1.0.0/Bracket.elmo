var _user$project$Bracket$bracStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'height', _1: '40px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px 0'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'font-size', _1: '2'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'color', _1: '#f60'},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _user$project$Bracket$revStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'height', _1: '40px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px 0'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'font-size', _1: '2em'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
						_1: {
							ctor: '::',
							_0: {ctor: '_Tuple2', _0: 'color', _1: 'red'},
							_1: {ctor: '[]'}
						}
					}
				}
			}
		}
	});
var _user$project$Bracket$strStyle = _elm_lang$html$Html_Attributes$style(
	{
		ctor: '::',
		_0: {ctor: '_Tuple2', _0: 'width', _1: '100%'},
		_1: {
			ctor: '::',
			_0: {ctor: '_Tuple2', _0: 'height', _1: '40px'},
			_1: {
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'padding', _1: '10px 0'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'font-size', _1: '2em'},
					_1: {
						ctor: '::',
						_0: {ctor: '_Tuple2', _0: 'text-align', _1: 'center'},
						_1: {ctor: '[]'}
					}
				}
			}
		}
	});
var _user$project$Bracket$pageFooter = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$footer,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$a,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$href('http://j.mp/reactiveNotFad'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$target('_blank'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$rel('noopener noreferrer'),
								_1: {ctor: '[]'}
							}
						}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Reactive is not a fad'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$footer,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$a,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$href('http://j.mp/relevantKG'),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$target('_blank'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$rel('noopener noreferrer'),
									_1: {ctor: '[]'}
								}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text('Stay relevant via KG'),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$footer,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$a,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$href('http://edu.kgisl.com'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$target('_blank'),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Attributes$rel('noopener noreferrer'),
										_1: {ctor: '[]'}
									}
								}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('The Campus Inside'),
								_1: {ctor: '[]'}
							}),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$Bracket$title = F2(
	function (message, times) {
		return _elm_lang$html$Html$text(
			_elm_lang$core$String$trimRight(
				A2(
					_elm_lang$core$String$repeat,
					times,
					_elm_lang$core$String$toUpper(
						A2(_elm_lang$core$Basics_ops['++'], message, ' ')))));
	});
var _user$project$Bracket$pageHeader = A2(
	_elm_lang$html$Html$div,
	{ctor: '[]'},
	{
		ctor: '::',
		_0: A2(
			_elm_lang$html$Html$h1,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(_user$project$Bracket$title, 'Validator', 1),
				_1: {ctor: '[]'}
			}),
		_1: {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$footer,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$a,
						{
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$href(
								A2(_elm_lang$core$Basics_ops['++'], _user$project$Version$gitRepo, '/issues/new')),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$target('_blank'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$rel('noopener noreferrer'),
									_1: {ctor: '[]'}
								}
							}
						},
						{
							ctor: '::',
							_0: _elm_lang$html$Html$text(_user$project$Version$version),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$br,
					{ctor: '[]'},
					{ctor: '[]'}),
				_1: {ctor: '[]'}
			}
		}
	});
var _user$project$Bracket$bracketHeader = function (display) {
	return display ? A2(
		_elm_lang$html$Html$h2,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(_user$project$Bracket$title, 'Bracket Map', 1),
			_1: {ctor: '[]'}
		}) : A2(
		_elm_lang$html$Html$h2,
		{ctor: '[]'},
		{ctor: '[]'});
};
var _user$project$Bracket$init = {ctor: '_Tuple2', _0: _user$project$BracketModel$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _user$project$Bracket$getIndexedCharacters = function (_p0) {
	return A2(
		_elm_lang$core$List$indexedMap,
		F2(
			function (v0, v1) {
				return {ctor: '_Tuple2', _0: v0, _1: v1};
			}),
		_elm_lang$core$String$toList(_p0));
};
var _user$project$Bracket$isStackEmpty = function (s) {
	return _elm_lang$core$Native_Utils.eq(
		_elm_lang$core$String$length(s),
		0) ? 'Empty' : '';
};
var _user$project$Bracket$stackHeader = F2(
	function (display, stack) {
		return display ? A2(
			_elm_lang$html$Html$h3,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: _elm_lang$html$Html$text(
					A2(
						_elm_lang$core$Basics_ops['++'],
						'Stack ',
						_user$project$Bracket$isStackEmpty(stack))),
				_1: {ctor: '[]'}
			}) : A2(
			_elm_lang$html$Html$h3,
			{ctor: '[]'},
			{ctor: '[]'});
	});
var _user$project$Bracket$stackItem = function (_p1) {
	var _p2 = _p1;
	return A2(
		_elm_lang$html$Html$li,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$span,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('index'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						_elm_lang$core$Basics$toString(_p2._0)),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$span,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('token'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$String$fromChar(_p2._1)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Bracket$stackList = F2(
	function (display, stack) {
		var entryItems = _elm_lang$core$List$reverse(
			_user$project$Bracket$getIndexedCharacters(
				_elm_lang$core$String$reverse(stack)));
		var items = display ? A2(
			_elm_lang$core$List$map,
			_user$project$Bracket$stackItem,
			A2(
				_elm_lang$core$Basics_ops['++'],
				entryItems,
				{
					ctor: '::',
					_0: {
						ctor: '_Tuple2',
						_0: -1,
						_1: _elm_lang$core$Native_Utils.chr('-')
					},
					_1: {ctor: '[]'}
				})) : {ctor: '[]'};
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$ul,
					{ctor: '[]'},
					items),
				_1: {ctor: '[]'}
			});
	});
var _user$project$Bracket$update = F2(
	function (msg, model) {
		var _p3 = msg;
		switch (_p3.ctor) {
			case 'NoOp':
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
			case 'UpdateExpression':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{expression: _p3._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'Mark':
				var updateEntry = function (e) {
					return _elm_lang$core$Native_Utils.eq(e.id, _p3._0) ? _elm_lang$core$Native_Utils.update(
						e,
						{isEnabled: !e.isEnabled}) : e;
				};
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							bmap: A2(_elm_lang$core$List$map, updateEntry, model.bmap)
						}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'MouseMsg':
				var _p4 = _p3._0;
				var x = _p4.x;
				var y = _p4.y;
				var onHeader = (_elm_lang$core$Native_Utils.cmp(x, 800) < 0) && (_elm_lang$core$Native_Utils.cmp(y, 60) < 0);
				var _p5 = onHeader;
				if (_p5 === true) {
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{showBracket: !model.showBracket, showStack: !model.showStack}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
			default:
				var _p6 = _p3._0;
				switch (_p6) {
					case 2:
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								model,
								{showBracket: !model.showBracket}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					case 17:
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								model,
								{showStack: !model.showStack}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					default:
						return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
				}
		}
	});
var _user$project$Bracket$KeyMsg = function (a) {
	return {ctor: 'KeyMsg', _0: a};
};
var _user$project$Bracket$MouseMsg = function (a) {
	return {ctor: 'MouseMsg', _0: a};
};
var _user$project$Bracket$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$batch(
		{
			ctor: '::',
			_0: _elm_lang$mouse$Mouse$clicks(_user$project$Bracket$MouseMsg),
			_1: {
				ctor: '::',
				_0: _elm_lang$keyboard$Keyboard$presses(_user$project$Bracket$KeyMsg),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Bracket$Mark = function (a) {
	return {ctor: 'Mark', _0: a};
};
var _user$project$Bracket$entryItem = function (entry) {
	return A2(
		_elm_lang$html$Html$li,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$classList(
				{
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'highlight', _1: entry.isEnabled},
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: _elm_lang$html$Html_Events$onClick(
					_user$project$Bracket$Mark(entry.id)),
				_1: {ctor: '[]'}
			}
		},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$span,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$class('phrase'),
					_1: {ctor: '[]'}
				},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text(
						_elm_lang$core$String$fromChar(entry.opener)),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$span,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$class('points'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_elm_lang$core$String$fromChar(entry.closer)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Bracket$entryList = F2(
	function (display, entries) {
		var entryItems = display ? A2(_elm_lang$core$List$map, _user$project$Bracket$entryItem, entries) : {ctor: '[]'};
		return A2(
			_elm_lang$html$Html$ul,
			{ctor: '[]'},
			entryItems);
	});
var _user$project$Bracket$UpdateExpression = function (a) {
	return {ctor: 'UpdateExpression', _0: a};
};
var _user$project$Bracket$entryForm = function (model) {
	var res = _user$project$BracketModel$validateString(model);
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$type_('text'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$placeholder('{( () )}'),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Attributes$value(model.expression),
							_1: {
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$name('phrase'),
								_1: {
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$autofocus(true),
									_1: {
										ctor: '::',
										_0: _elm_lang$html$Html_Events$onInput(_user$project$Bracket$UpdateExpression),
										_1: {
											ctor: '::',
											_0: _user$project$Bracket$strStyle,
											_1: {ctor: '[]'}
										}
									}
								}
							}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h2,
					{
						ctor: '::',
						_0: _user$project$Bracket$revStyle,
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(
								_elm_lang$core$Basics_ops['++'],
								model.expression,
								_user$project$BracketModel$isValid(res))),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(_user$project$Bracket$stackHeader, model.showStack, res.stack),
					_1: {
						ctor: '::',
						_0: A2(_user$project$Bracket$stackList, model.showStack, res.stack),
						_1: {ctor: '[]'}
					}
				}
			}
		});
};
var _user$project$Bracket$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Attributes$id('container'),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _user$project$Bracket$pageHeader,
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$id('wrapper'),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Attributes$id('first'),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _user$project$Bracket$entryForm(model),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Attributes$id('second'),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _user$project$Bracket$bracketHeader(model.showBracket),
									_1: {
										ctor: '::',
										_0: A2(_user$project$Bracket$entryList, model.showBracket, model.bmap),
										_1: {
											ctor: '::',
											_0: _user$project$Bracket$pageFooter,
											_1: {ctor: '[]'}
										}
									}
								}),
							_1: {ctor: '[]'}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Bracket$main = _elm_lang$html$Html$program(
	{init: _user$project$Bracket$init, update: _user$project$Bracket$update, view: _user$project$Bracket$view, subscriptions: _user$project$Bracket$subscriptions})();
var _user$project$Bracket$NoOp = {ctor: 'NoOp'};
